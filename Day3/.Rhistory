# install the following packages if you don't have them
# install.packages("devtools")  #used to install package from github
# install.packages('ggplot2')
# install.packages('maps')
# install.packages('mapdata');# provides additional map databases for the maps package
# devtools::install_github("wmurphyrd/fiftystater");
#This data package provides an easy way to plot 50-state choropleth thematic maps with ggplot2 in R.
# install.packages('usmap')
# install.packages('rgdal')
# install.packages('maptools'); #a set of tools for manipulating and reading geographic data, in particular ESRI shapefiles (Roger Bivand and many others)
# install.packages('shapefiles');  #reads and writes ESRI shapefiles
# install.packages('leaflet');
# install.packages("nycflights13");
# install.packages("dplyr");
# install.packages("magick");
library(ggplot2);
library(maps); #provides basemaps for the world, countries, and U.S. counties and allows the creation of simple choropleth and symbol-based maps
library(usmap); # US Maps Including Alaska and Hawaii; usmap::plot_usmap returns a ggplot object
library(rgdal); # provides "bindings" or a way to access the Geospatial Data Abstraction Library (GDAL) and the projection/transformation operations from the PROJ.4 library
library(leaflet); #create and customize interactive maps
library(nycflights13);
library(dplyr);
library(magick);
#load the data first
walmarts=read.csv("F:/DataCamp/data/walmarts_geocoded.csv", sep=",", header=TRUE);
head(walmarts);
Years=sort(unique(walmarts$year));
print(Years);
PlotWalmarts= function(x)
{
walmarts_year=walmarts[which(walmarts$year<=x),];
#subset data in the year x
map("state"); 	# Draw map
title(paste("Distribution of Wal-Mart stores, Year",x));
with(walmarts_year, points(x=lng,y=lat, pch=21,col='red',size=1));
}
library(magick);
img=image_graph(width=600,height=400,res=96);
for( i in Years)  PlotWalmarts(i);
dev.off();
LocationsAnimation = image_animate(img, fps = 1);
#show(LocationsAnimation);
image_write(LocationsAnimation, "LocationsAnimation.gif");
PlotWalmarts= function(x)
{
walmarts_year=walmarts[which(walmarts$year<=x),];
#subset data in the year x
map("state"); 	# Draw map
title(paste("Distribution of Wal-Mart stores, Year",x));
with(walmarts_year, points(x=lng,y=lat, pch=21,col='red',bg="blue",size=1));
}
library(magick);
img=image_graph(width=600,height=400,res=96);
for( i in Years)  PlotWalmarts(i);
dev.off();
LocationsAnimation = image_animate(img, fps = 1);
#show(LocationsAnimation);
image_write(LocationsAnimation, "LocationsAnimation.gif");
PlotWalmarts= function(x)
{
walmarts_year=walmarts[which(walmarts$year<=x),];
#subset data in the year x
map("state"); 	# Draw map
title(paste("Distribution of Wal-Mart stores, Year",x));
with(walmarts_year, points(x=lng,y=lat, pch=21,col='red',bg="blue",size=0.5));
}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr); library(stringi);
City=mutate(City, state=stringi::str_sub(city, -2, -1));  #extract the last two characters from the city name
library(dplyr); library(stringr);
City=mutate(City, state=stringi::str_sub(city, -2, -1));  #extract the last two characters from the city name
install.packages("stringr")
install.packages("stringr")
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
library(dplyr); library(stringr);
City=mutate(City, state=stringi::str_sub(city, -2, -1));  #extract the last two characters from the city name
library(dplyr); library(stringr);
City=mutate(City, state=stringr::str_sub(city, -2, -1));  #extract the last two characters from the city name
str(City);
head(City);
head(City);
head(us.cities)
unique(City$city);
strsplit("El Paso city, TX", ",")
strsplit("El Paso city, TX", ",")[1]
strsplit("El Paso city, TX", ",")[1,]
strsplit("El Paso city, TX", ",")[[1]]
strsplit("El Paso city, TX", ",")[[1]][1]
strsplit("El Paso city, TX", ",")[1,]
strsplit("El Paso city, TX", ",")[[2]]
strsplit("El Paso city, TX", ",")[[1]]
strsplit("El Paso city, TX", ",")[1]
strsplit("El Paso city, TX", ",")[1][1]
City=mutate(City, cityname=strsplit(city, ",")[[1]]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
str(City);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
unique(City$city);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr); library(stringr);
City=mutate(City, state=stringr::str_sub(city, -2, -1));  #extract the state name: the last two characters from the city name
str(City);
head(City);
City=mutate(City, cityname=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
#remove the string "city" from the variable
gsub("city *", "", "Omaha city")
gsub("city",  "Omaha city")
gsub("city", "", "Omaha city")
gsub(" city", "", "Omaha city")
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=gsub(pattern=" city", x="", cityname0)  );
head(City);
#remove the string "city" from the variable 'cityname0'
City=mutate(City, cityname=gsub(pattern=" city", x="", cityname0)  );
str_replace(string="Omaha city", pattern=" city", replacement="")
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=str_replace(string=cityname0, pattern=" city", replacement="");
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=str_replace(string=cityname0, pattern=" city", replacement=""));
#remove the string "city" from the variable 'cityname0'
head(City);
unique(City$cityname);
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=str_replace(string=cityname0, pattern=" city", replacement=""));
#remove the string "city" from the variable 'cityname0'
head(City);
unique(City$cityname);
City=mutate(City, cityname0=strsplit(city, ",")[[1]][]);  #extract the state name: the last two characters from the city name
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1,]);  #extract the state name: the last two characters from the city name
City=mutate(City, cityname0=strsplit(city, ",")[[1]][1]);  #extract the state name: the last two characters from the city name
head(City);
City=mutate(City, cityname=str_replace(string=cityname0, pattern=" city", replacement=""));
#remove the string "city" from the variable 'cityname0'
head(City);
unique(City$cityname);
City = read.csv("E:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name=gsub(pattern="city,", replacement='', city));
head(City);
unique(City$name);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city,", replacement='', city));
head(City);
unique(City$name);
#some values contain 'City' or 'County/'
City=mutate(City, name1=gsub(pattern="City", replacement='', city));
City=mutate(City, name=gsub(pattern="County/", replacement='', city));
unique(City$name);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city,", replacement='', city));
head(City);
unique(City$name);
#some values contain 'City' or 'County/'
City=mutate(City, name1=gsub(pattern="City", replacement='', name0));
City=mutate(City, name=gsub(pattern="County/", replacement='', name1));
unique(City$name);
CityRate=dplyr::left_join(City, us.cities, by="name");
head(CityRate);
which(complete.cases(CityRate)==F)
head(CityRate);
str(CityRate);
str(us.cities);
City$name=as.factor(City$name);
unique(City$name);
us.cities$name=as.factor(us.cities$name);
CityRate=dplyr::left_join(City, us.cities, by="name");
head(CityRate);
which(complete.cases(CityRate)==F)
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
City=mutate(City, name1=gsub(pattern="City ", replacement='', name0));
unique(City$name);
City=mutate(City, name1=gsub(pattern="City ", replacement='', name0));
unique(City$name1);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values contain 'City' or 'County/'
City=mutate(City, name1=gsub(pattern="City ", replacement='', name0));
unique(City$name);
City=mutate(City, name=gsub(pattern="County/", replacement='', name1));
#City$name=as.factor(City$name);
unique(City$name);
CityRate=dplyr::left_join(City, us.cities, by="name");
head(CityRate);
which(complete.cases(CityRate)==F)
head(City)
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values  'County/'
City=mutate(City, name=gsub(pattern="County/", replacement='', name0));
#City$name=as.factor(City$name);
unique(City$name);
CityRate=dplyr::left_join(City, us.cities, by="name");
head(CityRate);
which(complete.cases(CityRate)==F)
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
us.cities[which(us.cities$name   %in% City$city),];
str(City)
sstr <- c("c","ab","B","bba","c",NA,"@","bla","a","Ba","%")
sstr[sstr %in% c(letters, LETTERS)]
us.cities
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values contain 'County/'
City=mutate(City, name=gsub(pattern="County/", replacement='', name1));
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values contain 'County/'
City=mutate(City, name=gsub(pattern="County/", replacement='', name0));
unique(City$name);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(maps);
data(us.cities);
str(us.cities);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values contain 'County/' or '(consolidated)'
City=mutate(City, name1=gsub(pattern="County/", replacement='', name0));
City=mutate(City, name=gsub(pattern=" (consolidated)", replacement='', name1));
unique(City$name);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
head(City);
unique(City$name);
#some values contain 'County/' or '(consolidated)'
City=mutate(City, name1=gsub(pattern="County/", replacement='', name0));
City=mutate(City, name=gsub(pattern=" (consolidated)", replacement='', name1));
unique(City$name);
unique(City$name);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(dplyr);
City=mutate(City, name0=gsub(pattern="city, ", replacement='', city));
unique(City$name0);
#some values contain 'County/' or '(consolidated)'
City=mutate(City, name1=gsub(pattern="County/", replacement='', name0));
City=mutate(City, name=gsub(pattern=" (consolidated)", replacement='', name1));
unique(City$name);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
City=mutate(City, name0=gsub(pattern="city, " | "(consolidated) city, ", replacement='', city));
unique(City$name0);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
City=mutate(City, name0=gsub(pattern="(consolidated) city, ", replacement='', city));
head(City)
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
City=mutate(City, name0=gsub(pattern="(consolidated) city, ", replacement='', city));
City=mutate(City, name1=gsub(pattern="County/city, ", replacement='', name0));
City=mutate(City, name2=gsub(pattern="city, ", replacement='', name1));
unique(City$name2);
City = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City);
str(City);
City$city=as.character(City$city);
str(City);
unique(City$city);
library(dplyr);
City=mutate(City, name0=gsub(pattern="(consolidated) city, ", replacement='', city));
City=mutate(City, name1=gsub(pattern="County/city, ", replacement='', name0));
City=mutate(City, name2=gsub(pattern="city, ", replacement='', name1));
unique(City$name2);
#some values still contain 'County (consolidated)' or 'County/'
City=mutate(City, name3=gsub(pattern="County (consolidated) ", replacement='', name2));
City=mutate(City, name=gsub(pattern="(consolidated) ", replacement='', name3));
unique(City$name);
CityRate=dplyr::left_join(City, us.cities, by="name");
head(CityRate);
which(complete.cases(CityRate)==F)
head(CityRate)
CityRate$name
str(City)
string <- "log(M)"
gsub("log\\(", "", string)
City=mutate(City, name0=gsub(pattern="(consolidated) city, ", replacement='', city));
City=mutate(City, name1=gsub(pattern="County/city, ", replacement='', name0));
City=mutate(City, name2=gsub(pattern="city, ", replacement='', name1));
unique(City$name2);
#some values still contain 'County (consolidated)' or '(consolidated)'
City=mutate(City, name3=gsub(pattern="County (consolidated) ", replacement='', name2,fixed=TRUE));
City=mutate(City, name=gsub(pattern="(consolidated) ", replacement='', name3,fixed=TRUE));
unique(City$name);
2013:2017
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
City0 = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City0);
str(City0);
City0$city=as.character(City0$city);
str(City0);
unique(City0$city);
library(ggmap);
geocode(location = City0$city, output="latlon", source="google")
geo=geocode(location = City0$city, output="latlon", source="google");
geo=geocode(location = unique(City0$city), output="latlon", source="google");
head(geo);
City0 = read.csv("F:/DataCamp/data/UnemploymentCity.csv",header=TRUE, sep=",");
dim(City0);
str(City0);
City0$city=as.character(City0$city);
str(City0);
unique(City0$city);
library(stringr); library(dplyr);
City0=mutate(City0, state=stringr::str_sub(city, -2, -1));  #extract the state name: the last two characters from the city name
unique(City0$city);
library(dplyr);
City1=mutate(City0, name0=gsub(pattern="(consolidated) city, ", replacement='', city,fixed=TRUE));
City2=mutate(City1, name1=gsub(pattern="County/city, ", replacement='', name0,fixed=TRUE));
City=mutate(City2, name=gsub(pattern="city, ", replacement='', name1,fixed=TRUE));
unique(City$name);
geo=geocode(location = unique(City$city), output="latlon", source="google");
head(geo);
geo=geocode(location = unique(City$city), output="dsk", source="google");
head(geo);
geo=geocode(location = unique(City$city), output="latlon", source="dsk");
head(geo);
geo=geocode(location = City$city, output="latlon", source="dsk");
head(geo);
geo=geocode(location = City0$city, output="latlon", source="dsk");
head(geo);
head(City0)
head(City0)
geo=geocode(location = City0$city, output="latlon", source="dsk");
str(geo);
head(geo);
library(ggmap);
geo=geocode(location = City0$city, output="latlon", source="dsk");
str(geo);
head(geo);
which(complete.cases(geo));
head(geo);
which(complete.cases(geo)=F);
which(complete.cases(geo)==F);
library(ggplot2);
library(fiftystater);
CityRate2013=filter(CityRate0, year==2013);
data("fifty_states");
ggplot() + geom_polygon(data=fifty_states, aes(x=long, y=lat, group = group),color="white", fill="lightblue2")+
geom_point(data = CityRate2013,aes(x=lon, y=lat),col='red')
head(CityRate0)
library(ggmap);
geo=geocode(location = City0$city, output="latlon", source="dsk");
str(geo);
head(geo);
which(complete.cases(geo)==F);
#combine the two data frames
CityRate0 = dplyr::bind_cols(City0, geo);
str(CityRate0);
library(ggplot2);
library(fiftystater);
CityRate2013=filter(CityRate0, year==2013);
data("fifty_states");
ggplot() + geom_polygon(data=fifty_states, aes(x=long, y=lat, group = group),color="white", fill="lightblue2")+
geom_point(data = CityRate2013,aes(x=lon, y=lat),col='red')
