dim(DataWeather);
str(DataWeather);
head(DataWeather);
DataWeather$Date=as.Date(DataWeather$Date, "%m/%d/%Y");
DataWeather$ForecastDate=as.Date(DataWeather$ForecastDate, "%m/%d/%Y");
DataWeather$Date=as.Date(DataWeather$Date, "%m/%d/%Y");
DataWeather$ForecastDate=as.Date(DataWeather$ForecastDate, "%m/%d/%Y");
DataWeather=mutate(DataWeather, Type=difftime(Date, ForecastDate, units = c("days")) );
DataWeather$Type=as.factor(DataWeather$Type);
head(DataWeather);
DataWeather=mutate(DataWeather, Le=Max_TemperatureF-MaxTemp_forecast);
DataWeather=mutate(DataWeather, Se=Min_TemperatureF-MinTemp_forecast);
str(DataWeather);
DataWeather$Type=as.integer(DataWeather$Type);
library(ggplot2);
ggplot(DataWeather, aes(x=Type, y=Le)) +
geom_point()
library(ggplot2);
ggplot(DataWeather, aes(x=Le)) +
geom_histogram(aes(fill = Type),bins=20);
summary(DataWeather)
library(dplyr);
histWeather=read.csv("F:/DataCamp/data/histWeather201708.csv",header=TRUE, sep=","); #31 days weather data for 113 airports
dim(histWeather);
histWeather=filter(histWeather, complete.cases(histWeather)==T); #remove missing values
str(histWeather);
head(histWeather);
histWeather=filter(histWeather, complete.cases(histWeather)==T); #remove missing values
dim(histWeather);
str(forecast_Temp);
str(histWeather);
DataWeather=left_join(forecast_Temp,histWeather, by=c("ID","Date"));
#full_join(forecast_Temp,histWeather, by=c("ID","Date"));
dim(DataWeather);
str(DataWeather);
head(DataWeather);
DataWeather$Date=as.Date(DataWeather$Date, "%m/%d/%Y");
DataWeather$ForecastDate=as.Date(DataWeather$ForecastDate, "%m/%d/%Y");
DataWeather=mutate(DataWeather, Type=difftime(Date, ForecastDate, units = c("days")) );
DataWeather$Type=as.integer(DataWeather$Type);
head(DataWeather);
DataWeather=mutate(DataWeather, Le=Max_TemperatureF-MaxTemp_forecast);
DataWeather=mutate(DataWeather, Se=Min_TemperatureF-MinTemp_forecast);
str(DataWeather);
summary(DataWeather$Le);
summary(DataWeather$Se);
summary(DataWeather$Se);
summary(DataWeather$Le);
summary(DataWeather$Se);
library(gridExtra); library(ggplot2);
summary(DataWeather$Le);
summary(DataWeather$Se);
ggplot(DataWeather + geom_boxplot( aes(x=Type, y=Le));
library(gridExtra); library(ggplot2);
summary(DataWeather$Le);
summary(DataWeather$Se);
ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le));
library(gridExtra); library(ggplot2);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le));
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se));
grid.arrange(b1, b2, ncol=2);
DataWeather=mutate(DataWeather, Le=Max_TemperatureF-MaxTemp_forecast);
DataWeather=mutate(DataWeather, Se=Min_TemperatureF-MinTemp_forecast);
str(DataWeather);
DataWeather=mutate(DataWeather, Type=difftime(Date, ForecastDate, units = c("days")) );
DataWeather$Type=as.factor(DataWeather$Type);
head(DataWeather);
library(gridExtra); library(ggplot2);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le));
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se));
grid.arrange(b1, b2, ncol=2);
DataWeather=filter(DataWeather, complete.cases(DataWeather) == T);
library(gridExtra); library(ggplot2);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le));
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se));
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le))+scale_fill_brewer(palette="Dark2");;
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le))+scale_fill_brewer(palette="Dark2");
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se))+scale_fill_brewer(palette="Dark2");
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le))+scale_fill_brewer(palette="Dark2");
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se))+scale_fill_brewer(palette="Dark2");
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le))+scale_color_brewer(palette="Dark2");
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se))+scale_color_brewer(palette="Dark2");
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le))+scale_color_brewer(palette="Dark2");
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se))+scale_color_brewer(palette="Dark2");
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Le,fill=Type));
b2=ggplot(DataWeather) + geom_boxplot( aes(x=Type, y=Se,fill=Type));
grid.arrange(b1, b2, ncol=2);
library(gridExtra); library(ggplot2); library(RColorBrewer);
summary(DataWeather$Le);
summary(DataWeather$Se);
b1=ggplot(DataWeather,aes(x=Type, y=Se,fill=Type)) + geom_boxplot();
b2=ggplot(DataWeather,aes(x=Type, y=Se,fill=Type)) + geom_boxplot();
grid.arrange(b1, b2, ncol=2);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type)+geom_density();
ggplot(DataWeather, aes(x = Se)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type)+geom_density();
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(fill = Type,y=..density..),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se)) +
geom_histogram(aes(fill = Type,y=..density..),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le,y=..density..)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se,y=..density..)) +
geom_histogram(aes(fill = Type),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(y=..density..),bins = 20,fill = Type) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(y=..density..),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se,y=..density..)) +
geom_histogram(aes(y=..density..),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Le)) +
geom_histogram(aes(y=..density..),bins = 20) +
geom_density(color='red', fill='blue',alpha=0.3)+
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se,y=..density..)) +
geom_histogram(aes(y=..density..),bins = 20) +
facet_grid(~Type);
ggplot(DataWeather, aes(x = Se))
ggplot(DataWeather, aes(x = Se)) +
+geom_histogram(aes(y=..density..),bins = 20)
ggplot(DataWeather, aes(x = Se)) +
geom_histogram(aes(y=..density..),bins = 20)
ggplot(DataWeather, aes(x = Se)) +
geom_histogram(aes(y=..density..),bins = 20) +facet_grid(~Type);
ggplot(data=DataWeather,aes(x = Se, y=Le, fill=Type) )
ggplot(data=DataWeather,aes(x = Se, y=Le, fill=Type) )+
geom_point();
ggplot(data=DataWeather,aes(x = Se, y=Le, color=Type) )+
geom_point();
ggplot(data=DataWeather,aes(x = Se, y=Le, color=Type) )+
geom_point()+
geom_smooth();
ggplot(data=DataWeather,aes(x = Se, y=Le, color=Type) )+
geom_point()+
geom_smooth()+
facet_wrap(~Type);;
ggplot(data=DataWeather,aes(x = Se, y=Le, color=Type) )+
geom_point()+
geom_smooth()+
facet_wrap(~Type);
str(DataWeather)
ggplot(DataWeather, aes(x = Type, y = Le)) +
geom_line(aes(color = AirPtCd ));
str(locations);
locations=read.csv("F:/DataCamp/data/locations.csv",header=TRUE, sep=",");
str(locations);
head(locations);
Data=left_join(DataWeather,locations, by=c("AirPtCd"));
```
str(DataWeather)
locations=read.csv("F:/DataCamp/data/locations.csv",header=TRUE, sep=",");
str(locations);
head(locations);
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
head(Data)
Data2=aggregate(x = Data, by = list(Type, state), FUN = "mean");
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
Data2=aggregate(Data, by = list(Type, state), FUN = "mean");
str(Data)
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
str(Data);
##aggregate the data by Tpye and State; use the `mean` function
Data%>% group_by(Type, state)%>% summarise(mean1=mean(Le), mean2=mean(Se));
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
str(Data);
##aggregate the data by Tpye and State; use the mean of the absolute forecast errors
Data%>% group_by(Type, state)%>% summarise(mean1=mean(abs(Le)), mean2=mean(abs(Se)));
ggplot(Data, aes(x = Type, y = mean1)) +
geom_line(aes(color = AirPtCd ));
str(Data)
Data=left_join(DataWeather,locations, by=c("AirPtCd") );
str(Data);
##aggregate the data by Tpye and State; use the mean of the absolute forecast errors
Data%>% group_by(Type, state)%>% summarise(mean1=mean(abs(Le)), mean2=mean(abs(Se)));
str(Data)
Data=Data%>% group_by(Type, state)%>% summarise(mean1=mean(abs(Le)), mean2=mean(abs(Se)));
str(Data)
ggplot(Data, aes(x = Type, y = mean1)) +
geom_line(aes(color = AirPtCd ));
ggplot(Data, aes(x = Type, y = mean1)) +
geom_line(aes(color = state ));
```
Data
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
url="https://data.ct.gov/api/views/rybz-nyjw/rows.csv?accessType=DOWNLOAD";
Drug = read.csv(url, stringsAsFactors = FALSE);
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
ID,
which(complete.cases(Drug) == F);
filter(Drug, complete.cases(Drug) == T);
filter(Drug, complete.cases(Drug) == F);
str(Drug);
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
head(Drug)
Drug=Drug%>%mutate(counter=1)
head(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; It seems that they are valid observations
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=format(Date,"%m"))%>%mutate(year=format(Date,"%Y"));
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; It seems that they are valid observations
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
str(Drug)
1 >=1
Drug=mutate(quarter=ifelse(month>=1&month<=3,1, ifelse(month>=4&month<=6, 2, ifelse(month>=7&month<=9, 3,4) ) )  );
str(Drug);
str(Drug)
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) )  );
str(Drug);
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) (Drug);
tail(Drug)
Drug=mutate(Drug, time=quarter+4*(year-2012))
str(Drug);
head(Drug);
tail(Drug);
unique(Drug$time);
unique(Drug$year);
filter(Drug, complete.cases(Drug) == F);
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove the observations with missing date
Drug=filter(Drug, complete.cases(Drug$Date) == T);
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) )  );
str(Drug);
Drug=mutate(Drug, time=quarter+4*(year-2012))
unique(Drug$time);
unique(Drug$year);
Drug=filter(Drug, complete.cases(Drug) == T);
filter(Drug, complete.cases(Drug) == F)
library(datasauRus); library(dplyr); library(ggplot2);
str(datasaurus_dozen);
dinosaur=filter(datasaurus_dozen, dataset=="dino");
attach(dinosaur);
c(mean(x), sd(x));
c(mean(y), sd(y));
cor(x,y);
detach(dinosaur);
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) )  );
str(Drug);
Drug=mutate(Drug, time=quarter+4*(year-2012))
unique(Drug$year);
Drug$Date=as.character(Drug$Date);
substr("abcdef", 2, 4)
Drug$Date=as.character(Drug$Date);
Drug$Date=substr(Drug$Date, start=1, stop=8);
Drug$Date
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
Drug$Date=as.character(Drug$Date);
Drug$Date=substr(Drug$Date, start=1, stop=10);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
Drug$Date=as.character(Drug$Date);
Drug$Date=substr(Drug$Date, start=1, stop=10);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
Drug$Date=as.Date(Drug$Date, "%Y/%m/%d");
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) )  );
str(Drug);
unique(Drug$year);
which(is.na(Drug$year) == T);
is.na(Drug$year)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
Drug$Date=as.Date(Drug$Date, "%Y/%m/%d");
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
str(Drug)
Drug= read.csv("F:/DataCamp/data/Accidental_Drug_Related_Deaths__2012-June_2018.csv",header=TRUE, sep=",");
dim(Drug);
str(Drug)
library(dplyr);
Drug=dplyr::select(Drug, ID, Date,DateType,Age,Sex);
str(Drug);
which(complete.cases(Drug) == F); #check if there are missing values
filter(Drug, complete.cases(Drug) == F); #only three observations have missing values; Remove them
Drug=filter(Drug, complete.cases(Drug) == T);
str(Drug)
Drug$Date=as.Date(Drug$Date, "%m/%d/%Y");
str(Drug);
Drug=Drug%>%mutate(counter=1)%>%mutate(month=as.integer(format(Date,"%m")))%>%mutate(year=as.integer(format(Date,"%Y")));
Drug=mutate(Drug, quarter=ifelse(month>=1 & month<=3,1, ifelse(month>=4 & month<=6, 2, ifelse(month>=7 & month<=9, 3, 4) ) )  );
str(Drug);
unique(Drug$year);
which(is.na(Drug$year) == T);
Drug
which(is.na(Drug$year) == T);
unique(Drug$year);
which(is.na(Drug$year) == T);
Drug[2131,]
Drug=filter(is.na(Drug$year) == F);
dim(Drug);
Drug=mutate(Drug, time=quarter+4*(year-2012))
unique(Drug$time);
str(Drug)
Drug_quarters=aggregate(counter~ time, data = Drug, FUN= "sum");
str(Drug_quarters);
summary(Drug_quarters);
i=1
data=filter(Drug_quarters, time==i);
p = ggplot(data, aes(x = time, y = counter)) +
geom_line(colour="black") +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,30);
show(p);
library(magick);
img = image_graph(600, 400, res = 72); #open a new graphics device
for (i in 1:26)
{
data=filter(Drug_quarters, time==i);
p = ggplot(data, aes(x = time, y = counter)) +
geom_line(colour="black") +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,30);
show(p);
}
dev.off();
img_animation =image_animate(img, fps = 1);
print(img_animation);
i=1
data=filter(Drug_quarters, time==i);
data
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,30);
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black")+
xlim(0,26)+ylim(0,300);
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,300);
library(magick);
img = image_graph(600, 400, res = 72); #open a new graphics device
for (i in 1:26)
{
data=filter(Drug_quarters, time==i);
p = ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,300);
show(p);
}
dev.off();
img_animation =image_animate(img, fps = 1);
print(img_animation);
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,300)+
scale_x_continuous(breaks = NULL);
ggplot(data, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
ylim(0,300)+
scale_x_continuous(breaks = NULL);
1:1:2
library(magick);
img = image_graph(600, 400, res = 72); #open a new graphics device
for (i in 1:26)
{
data=filter(Drug_quarters, time==1:1:i);
p = ggplot(Drug_quarters, aes(x = time, y = counter) ) +
geom_point(shape=21, col="black", aes(fill=counter))+
xlim(0,26)+ylim(0,300);
show(p);
}
dev.off();
img_animation =image_animate(img, fps = 1);
print(img_animation);
i=5
filter(Drug_quarters, time<=i);
library(magick);
img = image_graph(600, 400, res = 72); #open a new graphics device
for (i in 1:26)
{
data=filter(Drug_quarters, time<=i);
p = ggplot(data, aes(x = time, y = freq) ) +
geom_point(shape=21, col="black", aes(fill="red"))+
xlim(0,26)+ylim(0,300)+
ggtitle("Accidental Drug Related Deaths 2012-2018 by Quarters");
show(p);
}
